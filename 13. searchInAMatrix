class Solution {
public:
    bool f(int i,int m, int target,vector<vector<int>>& matrix){
        for(int j=0; j<m; j++){
            if(matrix[i][j] == target) return true;
        }
        return false;
    }

    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n = matrix.size();
        int m = matrix[0].size();
        int t = n*m;
        vector<int> v;
        if(n == 1) return f(0, m, target, matrix);
        if(target >= matrix[n-1][0]) return f(n-1, m, target, matrix);
        for(int i=0; i<n-1; i++){
            if(target >= matrix[i][0] && target <= matrix[i+1][0]){
                return f(i, m, target, matrix) || f(i+1, m, target, matrix);
            } else continue;
        }
        return false;
    }
};

//Better approach to come after Binary search
