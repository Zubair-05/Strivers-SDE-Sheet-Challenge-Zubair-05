
int f(int dist, vector<int> &stalls, int k ){
    int n = stalls.size();
    int noOfCows = k-1, prev = stalls[0];
    int mini = stalls[n-1]-stalls[0];
    for(int i=1; i<n; i++){
        if(noOfCows && stalls[i]-prev >= dist){
            mini = min(mini,stalls[i]-prev);
            noOfCows--;
            prev = stalls[i];
        }
        if(!noOfCows) return mini;
    }
    return 0;   
}

int aggressiveCows(vector<int> &stalls, int k)
{
    int n = stalls.size();
    sort(stalls.begin(), stalls.end());
    int low = 1, high = stalls[n-1]-stalls[0];
    int ans = 0;
    while(low <= high){
        int mid = low + (high-low)/2;
        int val = f(mid, stalls, k);
        if(val){
            // ans = max(val, ans);
            low = mid+1;
        } else high = mid-1;
    }
    return high;
}
