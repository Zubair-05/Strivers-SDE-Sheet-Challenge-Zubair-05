/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(!head) return NULL;
        ListNode* temp = head;
        int cnt = 0;
        while(temp){
            cnt++;
            temp = temp->next;
        }
        if(cnt) k = k%cnt;
        if(k == 0) return head;
        cnt -= k;
        temp = head;
        while(cnt>1){
            temp =  temp->next;
            cnt--;
        }
        ListNode* newHead = (temp != nullptr) ? temp->next : nullptr;
        temp->next = NULL;
        temp = newHead;
        while(temp->next) temp = temp->next;
        temp->next = head;
        return newHead;


    }
};
