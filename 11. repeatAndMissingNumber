vector<int> Solution::repeatedNumber(const vector<int> &A) {
    int n = A.size();
    long long sum = 0;
    long long sumOfSquares = 0;

    for (int num : A) {
        sum += num;
        sumOfSquares += (long long)num * num;
    }

    long long expectedSum = (long long)n * (n + 1) / 2;
    long long expectedSumOfSquares = (long long)n * (n + 1) * (2 * n + 1) / 6;

    long long diffSum = expectedSum - sum;
    long long diffSumOfSquares = expectedSumOfSquares - sumOfSquares;

    long long repeatedNumber = (diffSumOfSquares / diffSum + diffSum) / 2;
    long long missingNumber = repeatedNumber - diffSum;

    return {(int)missingNumber, (int)repeatedNumber};
}
